{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC2\\\\Desktop\\\\_blgashLMS\\\\frontend\\\\src\\\\components\\\\ListeningAdmin\\\\data.js\",\n    _s = $RefreshSig$();\n\nimport listeningApi from \"apis/listeningApi\";\nimport ListeningDetailModal from \"components/UI/ListeningDetailModal\";\nimport { equalArray } from \"helper\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ListeningAdmin from \"./index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ListeningAdminData() {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const [sortType, setSortType] = useState(\"Newest\");\n  const [packInfo, setPackInfo] = useState(() => ({\n    topic: \"All\"\n  }));\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [more, setMore] = useState(true); // toggle infinite scrolling\n\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const totalPage = useRef(0);\n  const preSearchList = useRef([]);\n\n  const nextPage = () => {\n    if (page < totalPage.current) {\n      setPage(page + 1);\n    } else {\n      setMore(false);\n    }\n  };\n\n  const settingWordPack = info => {\n    // check old pack vs new pack\n    let isEqual = true;\n\n    if (packInfo !== \"topic\" && packInfo.topic !== info.topic) {\n      isEqual = false;\n    }\n\n    if (isEqual) isEqual = equalArray(packInfo.topic, info.topic);\n    totalPage.current = 0;\n    preSearchList.current = [];\n    setMore(true);\n    setList([]);\n    setPackInfo(info);\n    setPage(1);\n  };\n\n  const onSortTypeChange = function () {\n    let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Newest\";\n    if (type === sortType) return;\n    preSearchList.current = [];\n    setSortType(type);\n    setPage(1);\n    setList([]);\n  };\n\n  const onSearchWord = async name => {\n    try {\n      if (name === \"\") {\n        setList(preSearchList.current);\n        setMore(true);\n        return;\n      }\n\n      const apiRes = await listeningApi.searchListen(name);\n\n      if (apiRes.status === 200) {\n        // const { packList = [] } = apiRes.data.listens;\n        setList(apiRes.data.listens);\n        setMore(false);\n      }\n    } catch (error) {}\n  }; // get word pack\n\n\n  useEffect(() => {\n    let isSub = true;\n\n    (async function () {\n      try {\n        setLoading(true);\n        let apiRes = null;\n\n        if (packInfo.topic === \"All\") {\n          apiRes = await listeningApi.getAllListen(sortType);\n        } else {\n          apiRes = await listeningApi.getListenByTopic(packInfo.topic, sortType);\n        }\n\n        if (apiRes && isSub) {\n          const newList = apiRes.data.listens.filter(item => {\n            return item.isLocked === 0;\n          });\n          preSearchList.current = newList;\n          setList(newList);\n        }\n      } catch (error) {} finally {\n        if (isSub) {\n          setLoading(false);\n          isFirstLoad && setIsFirstLoad(false);\n        }\n      }\n    })();\n\n    return () => isSub = false;\n  }, [page, packInfo, sortType]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListeningAdmin, {\n      list: list,\n      loading: loading,\n      onLoadData: nextPage,\n      more: more,\n      isFirstLoad: isFirstLoad,\n      onSettingWordPack: settingWordPack,\n      onSortTypeChange: onSortTypeChange,\n      onSearchWord: onSearchWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListeningDetailModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListeningAdminData, \"gr9LrJdCZg3excKaQcaEi6ZkzR4=\");\n\n_c = ListeningAdminData;\nexport default ListeningAdminData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListeningAdminData\");","map":{"version":3,"names":["listeningApi","ListeningDetailModal","equalArray","React","useEffect","useRef","useState","ListeningAdmin","ListeningAdminData","page","setPage","sortType","setSortType","packInfo","setPackInfo","topic","loading","setLoading","list","setList","more","setMore","isFirstLoad","setIsFirstLoad","totalPage","preSearchList","nextPage","current","settingWordPack","info","isEqual","onSortTypeChange","type","onSearchWord","name","apiRes","searchListen","status","data","listens","error","isSub","getAllListen","getListenByTopic","newList","filter","item","isLocked"],"sources":["C:/Users/PC2/Desktop/_blgashLMS/frontend/src/components/ListeningAdmin/data.js"],"sourcesContent":["import listeningApi from \"apis/listeningApi\";\nimport ListeningDetailModal from \"components/UI/ListeningDetailModal\";\nimport { equalArray } from \"helper\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ListeningAdmin from \"./index\";\n\nfunction ListeningAdminData() {\n  const [page, setPage] = useState(1);\n  const [sortType, setSortType] = useState(\"Newest\");\n  const [packInfo, setPackInfo] = useState(() => ({\n    topic: \"All\",\n  }));\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [more, setMore] = useState(true); // toggle infinite scrolling\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const totalPage = useRef(0);\n  const preSearchList = useRef([]);\n\n  const nextPage = () => {\n    if (page < totalPage.current) {\n      setPage(page + 1);\n    } else {\n      setMore(false);\n    }\n  };\n\n  const settingWordPack = (info) => {\n    // check old pack vs new pack\n    let isEqual = true;\n    if (packInfo !== \"topic\" && packInfo.topic !== info.topic) {\n      isEqual = false;\n    }\n    if (isEqual) isEqual = equalArray(packInfo.topic, info.topic);\n\n    totalPage.current = 0;\n    preSearchList.current = [];\n    setMore(true);\n    setList([]);\n    setPackInfo(info);\n    setPage(1);\n  };\n\n  const onSortTypeChange = (type = \"Newest\") => {\n    if (type === sortType) return;\n    preSearchList.current = [];\n    setSortType(type);\n    setPage(1);\n    setList([]);\n  };\n\n  const onSearchWord = async (name) => {\n    try {\n      if (name === \"\") {\n        setList(preSearchList.current);\n        setMore(true);\n        return;\n      }\n      const apiRes = await listeningApi.searchListen(name);\n      if (apiRes.status === 200) {\n        // const { packList = [] } = apiRes.data.listens;\n        setList(apiRes.data.listens);\n        setMore(false);\n      }\n    } catch (error) {}\n  };\n\n  // get word pack\n  useEffect(() => {\n    let isSub = true;\n    (async function () {\n      try {\n        setLoading(true);\n        let apiRes = null;\n        if (packInfo.topic === \"All\") {\n          apiRes = await listeningApi.getAllListen(sortType);\n        } else {\n          apiRes = await listeningApi.getListenByTopic(\n            packInfo.topic,\n            sortType\n          );\n        }\n        if (apiRes && isSub) {\n          const newList = apiRes.data.listens.filter((item) => {\n            return item.isLocked === 0\n          })\n          preSearchList.current = newList;\n          setList(newList);\n        }\n      } catch (error) {\n      } finally {\n        if (isSub) {\n          setLoading(false);\n          isFirstLoad && setIsFirstLoad(false);\n        }\n      }\n    })();\n\n    return () => (isSub = false);\n  }, [page, packInfo, sortType]);\n\n  return (\n    <>\n      <ListeningAdmin\n        list={list}\n        loading={loading}\n        onLoadData={nextPage}\n        more={more}\n        isFirstLoad={isFirstLoad}\n        onSettingWordPack={settingWordPack}\n        onSortTypeChange={onSortTypeChange}\n        onSearchWord={onSearchWord}\n      />\n      <ListeningDetailModal />\n    </>\n  );\n}\n\nexport default ListeningAdminData;\n"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,cAAP,MAA2B,SAA3B;;;;AAEA,SAASC,kBAAT,GAA8B;EAAA;;EAC5B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,QAAD,CAAxC;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,OAAO;IAC9CS,KAAK,EAAE;EADuC,CAAP,CAAD,CAAxC;EAGA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC,CAR4B,CAQY;;EACxC,MAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAMkB,SAAS,GAAGnB,MAAM,CAAC,CAAD,CAAxB;EACA,MAAMoB,aAAa,GAAGpB,MAAM,CAAC,EAAD,CAA5B;;EAEA,MAAMqB,QAAQ,GAAG,MAAM;IACrB,IAAIjB,IAAI,GAAGe,SAAS,CAACG,OAArB,EAA8B;MAC5BjB,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;IACD,CAFD,MAEO;MACLY,OAAO,CAAC,KAAD,CAAP;IACD;EACF,CAND;;EAQA,MAAMO,eAAe,GAAIC,IAAD,IAAU;IAChC;IACA,IAAIC,OAAO,GAAG,IAAd;;IACA,IAAIjB,QAAQ,KAAK,OAAb,IAAwBA,QAAQ,CAACE,KAAT,KAAmBc,IAAI,CAACd,KAApD,EAA2D;MACzDe,OAAO,GAAG,KAAV;IACD;;IACD,IAAIA,OAAJ,EAAaA,OAAO,GAAG5B,UAAU,CAACW,QAAQ,CAACE,KAAV,EAAiBc,IAAI,CAACd,KAAtB,CAApB;IAEbS,SAAS,CAACG,OAAV,GAAoB,CAApB;IACAF,aAAa,CAACE,OAAd,GAAwB,EAAxB;IACAN,OAAO,CAAC,IAAD,CAAP;IACAF,OAAO,CAAC,EAAD,CAAP;IACAL,WAAW,CAACe,IAAD,CAAX;IACAnB,OAAO,CAAC,CAAD,CAAP;EACD,CAdD;;EAgBA,MAAMqB,gBAAgB,GAAG,YAAqB;IAAA,IAApBC,IAAoB,uEAAb,QAAa;IAC5C,IAAIA,IAAI,KAAKrB,QAAb,EAAuB;IACvBc,aAAa,CAACE,OAAd,GAAwB,EAAxB;IACAf,WAAW,CAACoB,IAAD,CAAX;IACAtB,OAAO,CAAC,CAAD,CAAP;IACAS,OAAO,CAAC,EAAD,CAAP;EACD,CAND;;EAQA,MAAMc,YAAY,GAAG,MAAOC,IAAP,IAAgB;IACnC,IAAI;MACF,IAAIA,IAAI,KAAK,EAAb,EAAiB;QACff,OAAO,CAACM,aAAa,CAACE,OAAf,CAAP;QACAN,OAAO,CAAC,IAAD,CAAP;QACA;MACD;;MACD,MAAMc,MAAM,GAAG,MAAMnC,YAAY,CAACoC,YAAb,CAA0BF,IAA1B,CAArB;;MACA,IAAIC,MAAM,CAACE,MAAP,KAAkB,GAAtB,EAA2B;QACzB;QACAlB,OAAO,CAACgB,MAAM,CAACG,IAAP,CAAYC,OAAb,CAAP;QACAlB,OAAO,CAAC,KAAD,CAAP;MACD;IACF,CAZD,CAYE,OAAOmB,KAAP,EAAc,CAAE;EACnB,CAdD,CA7C4B,CA6D5B;;;EACApC,SAAS,CAAC,MAAM;IACd,IAAIqC,KAAK,GAAG,IAAZ;;IACA,CAAC,kBAAkB;MACjB,IAAI;QACFxB,UAAU,CAAC,IAAD,CAAV;QACA,IAAIkB,MAAM,GAAG,IAAb;;QACA,IAAItB,QAAQ,CAACE,KAAT,KAAmB,KAAvB,EAA8B;UAC5BoB,MAAM,GAAG,MAAMnC,YAAY,CAAC0C,YAAb,CAA0B/B,QAA1B,CAAf;QACD,CAFD,MAEO;UACLwB,MAAM,GAAG,MAAMnC,YAAY,CAAC2C,gBAAb,CACb9B,QAAQ,CAACE,KADI,EAEbJ,QAFa,CAAf;QAID;;QACD,IAAIwB,MAAM,IAAIM,KAAd,EAAqB;UACnB,MAAMG,OAAO,GAAGT,MAAM,CAACG,IAAP,CAAYC,OAAZ,CAAoBM,MAApB,CAA4BC,IAAD,IAAU;YACnD,OAAOA,IAAI,CAACC,QAAL,KAAkB,CAAzB;UACD,CAFe,CAAhB;UAGAtB,aAAa,CAACE,OAAd,GAAwBiB,OAAxB;UACAzB,OAAO,CAACyB,OAAD,CAAP;QACD;MACF,CAlBD,CAkBE,OAAOJ,KAAP,EAAc,CACf,CAnBD,SAmBU;QACR,IAAIC,KAAJ,EAAW;UACTxB,UAAU,CAAC,KAAD,CAAV;UACAK,WAAW,IAAIC,cAAc,CAAC,KAAD,CAA7B;QACD;MACF;IACF,CA1BD;;IA4BA,OAAO,MAAOkB,KAAK,GAAG,KAAtB;EACD,CA/BQ,EA+BN,CAAChC,IAAD,EAAOI,QAAP,EAAiBF,QAAjB,CA/BM,CAAT;EAiCA,oBACE;IAAA,wBACE,QAAC,cAAD;MACE,IAAI,EAAEO,IADR;MAEE,OAAO,EAAEF,OAFX;MAGE,UAAU,EAAEU,QAHd;MAIE,IAAI,EAAEN,IAJR;MAKE,WAAW,EAAEE,WALf;MAME,iBAAiB,EAAEM,eANrB;MAOE,gBAAgB,EAAEG,gBAPpB;MAQE,YAAY,EAAEE;IARhB;MAAA;MAAA;MAAA;IAAA,QADF,eAWE,QAAC,oBAAD;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA,gBADF;AAeD;;GA9GQzB,kB;;KAAAA,kB;AAgHT,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}