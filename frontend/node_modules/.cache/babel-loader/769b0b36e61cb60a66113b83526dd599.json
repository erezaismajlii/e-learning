{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC2\\\\Desktop\\\\_blgashLMS\\\\frontend\\\\src\\\\components\\\\Test\\\\Part5.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { FormControl, Typography, RadioGroup, FormControlLabel, Radio } from \"@material-ui/core\";\nimport Pagination from \"./Pagination\";\nimport fileTestApi from \"apis/fileTestApi\";\nimport submitTestApi from \"apis/submitTestApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Part5(_ref) {\n  _s();\n\n  let {\n    part,\n    testId,\n    submitId,\n    setSubmitAnswers5\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [partQuestions, setPartQuestions] = useState([]);\n  const [submitList, setSubmitList] = useState([]);\n\n  const addAnswers = answer => {\n    let checkExisted = submitList.some(item => answer.QuestionTestId === item.QuestionTestId);\n    let newList = [];\n\n    if (checkExisted === true) {\n      newList = submitList.filter(item => item.QuestionTestId !== answer.QuestionTestId);\n    } else {\n      newList = submitList;\n    }\n\n    newList.push(answer);\n    setSubmitList(newList);\n    setSubmitAnswers5(newList);\n  };\n\n  const IsCheckedAnswer = answerId => {\n    let checkedAnswer = submitList.some(item => answerId === item._id);\n    return checkedAnswer;\n  };\n\n  useEffect(() => {\n    (async function () {\n      const res = await fileTestApi.getAllQuestionsOfFile(testId, part, currentPage); // const indexOfLast = currentPage;\n      // const indexOfFirst = indexOfLast - 1;\n\n      setPartQuestions(res.data);\n    })();\n\n    return () => {};\n  }, [testId, part, currentPage]);\n  useEffect(() => {\n    (async function () {\n      const res = await submitTestApi.getSubmitById(submitId);\n      setSubmitList(res.data.AnswerTests5);\n      setSubmitAnswers5(res.data.AnswerTests5);\n    })();\n\n    return () => {};\n  }, [testId, part]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Part 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: (partQuestions === null || partQuestions === void 0 ? void 0 : partQuestions.Questions) && (partQuestions === null || partQuestions === void 0 ? void 0 : partQuestions.Questions.map((question, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: [question.Sentence, \". \", question.Content]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              \"aria-labelledby\": \"demo-radio-buttons-group-label\",\n              defaultValue: \"female\",\n              name: \"radio-buttons-group\",\n              children: question.Answers && question.Answers.map((answer, index) => {\n                return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: answer.Sentence,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    onClick: () => addAnswers(answer),\n                    checked: IsCheckedAnswer(answer._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 38\n                  }, this),\n                  label: `(${answer.Sentence}) ${answer.Content}`\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this);\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      pages: 30,\n      setCurrentPage: setCurrentPage,\n      submitAnswers5: submitList,\n      submitId: submitId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Part5, \"oJn3GGWdZEdOBqJ5ZxU8kEf55zg=\");\n\n_c = Part5;\n\nvar _c;\n\n$RefreshReg$(_c, \"Part5\");","map":{"version":3,"names":["React","useState","useEffect","FormControl","Typography","RadioGroup","FormControlLabel","Radio","Pagination","fileTestApi","submitTestApi","Part5","part","testId","submitId","setSubmitAnswers5","currentPage","setCurrentPage","partQuestions","setPartQuestions","submitList","setSubmitList","addAnswers","answer","checkExisted","some","item","QuestionTestId","newList","filter","push","IsCheckedAnswer","answerId","checkedAnswer","_id","res","getAllQuestionsOfFile","data","getSubmitById","AnswerTests5","Questions","map","question","index","Sentence","Content","Answers"],"sources":["C:/Users/PC2/Desktop/_blgashLMS/frontend/src/components/Test/Part5.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  FormControl,\n  Typography,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n} from \"@material-ui/core\";\nimport Pagination from \"./Pagination\";\nimport fileTestApi from \"apis/fileTestApi\";\nimport submitTestApi from \"apis/submitTestApi\";\n\nexport default function Part5({ part, testId, submitId, setSubmitAnswers5 }) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [partQuestions, setPartQuestions] = useState([]);\n  const [submitList, setSubmitList] = useState([]);\n\n  const addAnswers = (answer) =>{\n    let checkExisted = submitList.some(item =>\n      answer.QuestionTestId === item.QuestionTestId\n    );\n\n    let newList = [];\n    if(checkExisted === true){\n      newList = submitList.filter(item => item.QuestionTestId !== answer.QuestionTestId);     \n    }\n    else{\n      newList = submitList;      \n    }\n    \n    newList.push(answer);\n    setSubmitList(newList);\n    setSubmitAnswers5(newList);    \n}\n\nconst IsCheckedAnswer = (answerId) =>{\n  let checkedAnswer = submitList.some(item =>\n    answerId === item._id\n  );\n  return checkedAnswer;    \n}\nuseEffect(() => {\n  (async function () {\n    const res = await fileTestApi.getAllQuestionsOfFile(testId, part, currentPage);\n    // const indexOfLast = currentPage;\n    // const indexOfFirst = indexOfLast - 1;\n    setPartQuestions(res.data);\n  })();\n  return () => {};\n}, [testId, part, currentPage]);\n\n\n  useEffect(() => {\n    (async function () {\n      const res = await submitTestApi.getSubmitById(submitId);\n      setSubmitList(res.data.AnswerTests5);\n      setSubmitAnswers5(res.data.AnswerTests5);\n    })();\n    return () => {};\n  }, [testId, part]);\n\n  return (\n    <div>\n      <Typography variant=\"h5\">Part 5</Typography>\n      <Typography>{}</Typography>\n      <div>\n        <FormControl>\n          {partQuestions?.Questions &&\n            partQuestions?.Questions.map((question, index) => {\n              return (\n                <div key={index}>\n                  <Typography>{question.Sentence}. {question.Content}</Typography>\n                  <RadioGroup\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\n                    defaultValue=\"female\"\n                    name=\"radio-buttons-group\"\n                  >\n                    {question.Answers &&\n                      question.Answers.map((answer, index) => {\n                        return (\n                          <FormControlLabel\n                            key={index}\n                            value={answer.Sentence}\n                            control={<Radio\n                              onClick={()=>addAnswers(answer)}\n                              checked = {IsCheckedAnswer(answer._id)}\n                               />}\n                            label={`(${answer.Sentence}) ${answer.Content}`}\n                          />\n                        );\n                      })}\n                  </RadioGroup>\n                </div>\n              );\n            })}\n        </FormControl>\n      </div>\n      <Pagination \n        pages={30} \n        setCurrentPage={setCurrentPage}\n        submitAnswers5={submitList}\n        submitId={submitId}>\n      </Pagination>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}