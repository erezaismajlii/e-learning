{"ast":null,"code":"import IPA_CONSTANT from \"../constants/ipaConstant\";\nimport ipaApi from \"./../../apis/ipaApi\";\nexport const getIPA = id => {\n  return async dispatch => {\n    try {\n      const response = await ipaApi.getIPA(id);\n\n      if (response.status === 200) {\n        dispatch({\n          type: IPA_CONSTANT.GET_IPA,\n          payload: response.data\n        });\n      } else {\n        dispatch({\n          type: IPA_CONSTANT.SET_IPA_ERROR,\n          payload: response.data.message\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: IPA_CONSTANT.SET_IPA_ERROR,\n        payload: error.response.message\n      });\n    }\n  };\n};\nexport const getIPARelative = (type, key) => {\n  return async dispatch => {\n    try {\n      const response = await ipaApi.getIPARelative(type, key);\n\n      if (response.status === 200) {\n        dispatch({\n          type: IPA_CONSTANT.GET_IPA_RELATIVE,\n          payload: response.data\n        });\n      } else {\n        dispatch({\n          type: IPA_CONSTANT.SET_IPA_ERROR,\n          payload: response.data.message\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: IPA_CONSTANT.SET_IPA_ERROR,\n        payload: error.response.message\n      });\n    }\n  };\n};\nexport const getIPAByType = type => {\n  return async dispatch => {\n    try {\n      const response = await ipaApi.getIPAByType(type);\n      console.log(response.data);\n\n      if (response.status === 200) {\n        dispatch({\n          type: IPA_CONSTANT.GET_IPA_BY_TYPE,\n          payload: response.data.ipas\n        });\n      } else {\n        dispatch({\n          type: IPA_CONSTANT.SET_IPA_ERROR,\n          payload: response.data.message\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: IPA_CONSTANT.SET_IPA_ERROR,\n        payload: error.response.message\n      });\n    }\n  };\n};\nexport const postIPA = formData => {\n  return async (dispatch, getState) => {\n    try {\n      const {\n        authReducer: {\n          user\n        }\n      } = getState();\n      const response = await ipaApi.postIPA(formData, user.access_token);\n\n      if (response.status === 200) {\n        dispatch({\n          type: IPA_CONSTANT.CREATE_IPA,\n          payload: response.data.ipa\n        });\n      } else {\n        dispatch({\n          type: IPA_CONSTANT.SET_IPA_ERROR,\n          payload: response.data.message\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: IPA_CONSTANT.SET_IPA_ERROR,\n        payload: error.response.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["IPA_CONSTANT","ipaApi","getIPA","id","dispatch","response","status","type","GET_IPA","payload","data","SET_IPA_ERROR","message","error","getIPARelative","key","GET_IPA_RELATIVE","getIPAByType","console","log","GET_IPA_BY_TYPE","ipas","postIPA","formData","getState","authReducer","user","access_token","CREATE_IPA","ipa"],"sources":["C:/Users/PC2/Desktop/_blgashLMS/frontend/src/redux/actions/ipaAction.js"],"sourcesContent":["import IPA_CONSTANT from \"../constants/ipaConstant\";\nimport ipaApi from \"./../../apis/ipaApi\";\n\n\nexport const getIPA = (id) => {\n    return async (dispatch) => {\n        try { \n          const response = await ipaApi.getIPA(id);\n          if(response.status===200){\n            dispatch({\n              type: IPA_CONSTANT.GET_IPA,\n              payload: response.data,\n            })\n          }\n          else\n          {\n            dispatch({\n              type: IPA_CONSTANT.SET_IPA_ERROR,\n              payload: response.data.message,\n            })\n          }\n        } catch (error) {\n          dispatch({ type: IPA_CONSTANT.SET_IPA_ERROR,\n            payload: error.response.message\n          })\n      }\n    }\n};\n\nexport const getIPARelative = (type, key) => {\n  return async (dispatch) => {\n      try { \n        const response = await ipaApi.getIPARelative(type, key);\n        if(response.status===200){\n          dispatch({\n            type: IPA_CONSTANT.GET_IPA_RELATIVE,\n            payload: response.data,\n          })\n        }\n        else\n        {\n          dispatch({\n            type: IPA_CONSTANT.SET_IPA_ERROR,\n            payload: response.data.message,\n          })\n        }\n      } catch (error) {\n        dispatch({ type: IPA_CONSTANT.SET_IPA_ERROR,\n          payload: error.response.message\n        })\n    }\n  }\n};\n\nexport const getIPAByType = (type) => {\n  return async (dispatch) => {\n      try { \n       \n        const response = await ipaApi.getIPAByType(type);\n        console.log(response.data)\n        if(response.status===200){\n          dispatch({\n            type: IPA_CONSTANT.GET_IPA_BY_TYPE,\n            payload: response.data.ipas,\n          })\n        }\n        else\n        {\n          dispatch({\n            type: IPA_CONSTANT.SET_IPA_ERROR,\n            payload: response.data.message,\n          })\n        }\n      } catch (error) {\n        dispatch({ type: IPA_CONSTANT.SET_IPA_ERROR,\n          payload: error.response.message\n        })\n    }\n  }\n};\n\nexport const postIPA = (formData) => {\n    return async (dispatch, getState) => {\n        try { \n          const {\n            authReducer: { user },\n          } = getState();\n\n          const response = await ipaApi.postIPA(formData, user.access_token);\n          if(response.status===200){\n            dispatch({\n              type: IPA_CONSTANT.CREATE_IPA,\n              payload: response.data.ipa,\n            })\n          }\n          else\n          {\n            dispatch({\n              type: IPA_CONSTANT.SET_IPA_ERROR,\n              payload: response.data.message,\n            })\n          }\n        } catch (error) {\n          dispatch({ type: IPA_CONSTANT.SET_IPA_ERROR,\n             payload: error.response.message\n          })\n      }\n    }\n};\n\n"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,OAAO,MAAMC,MAAM,GAAIC,EAAD,IAAQ;EAC1B,OAAO,MAAOC,QAAP,IAAoB;IACvB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACC,MAAP,CAAcC,EAAd,CAAvB;;MACA,IAAGE,QAAQ,CAACC,MAAT,KAAkB,GAArB,EAAyB;QACvBF,QAAQ,CAAC;UACPG,IAAI,EAAEP,YAAY,CAACQ,OADZ;UAEPC,OAAO,EAAEJ,QAAQ,CAACK;QAFX,CAAD,CAAR;MAID,CALD,MAOA;QACEN,QAAQ,CAAC;UACPG,IAAI,EAAEP,YAAY,CAACW,aADZ;UAEPF,OAAO,EAAEJ,QAAQ,CAACK,IAAT,CAAcE;QAFhB,CAAD,CAAR;MAID;IACF,CAfD,CAeE,OAAOC,KAAP,EAAc;MACdT,QAAQ,CAAC;QAAEG,IAAI,EAAEP,YAAY,CAACW,aAArB;QACPF,OAAO,EAAEI,KAAK,CAACR,QAAN,CAAeO;MADjB,CAAD,CAAR;IAGH;EACF,CArBD;AAsBH,CAvBM;AAyBP,OAAO,MAAME,cAAc,GAAG,CAACP,IAAD,EAAOQ,GAAP,KAAe;EAC3C,OAAO,MAAOX,QAAP,IAAoB;IACvB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACa,cAAP,CAAsBP,IAAtB,EAA4BQ,GAA5B,CAAvB;;MACA,IAAGV,QAAQ,CAACC,MAAT,KAAkB,GAArB,EAAyB;QACvBF,QAAQ,CAAC;UACPG,IAAI,EAAEP,YAAY,CAACgB,gBADZ;UAEPP,OAAO,EAAEJ,QAAQ,CAACK;QAFX,CAAD,CAAR;MAID,CALD,MAOA;QACEN,QAAQ,CAAC;UACPG,IAAI,EAAEP,YAAY,CAACW,aADZ;UAEPF,OAAO,EAAEJ,QAAQ,CAACK,IAAT,CAAcE;QAFhB,CAAD,CAAR;MAID;IACF,CAfD,CAeE,OAAOC,KAAP,EAAc;MACdT,QAAQ,CAAC;QAAEG,IAAI,EAAEP,YAAY,CAACW,aAArB;QACPF,OAAO,EAAEI,KAAK,CAACR,QAAN,CAAeO;MADjB,CAAD,CAAR;IAGH;EACF,CArBD;AAsBD,CAvBM;AAyBP,OAAO,MAAMK,YAAY,GAAIV,IAAD,IAAU;EACpC,OAAO,MAAOH,QAAP,IAAoB;IACvB,IAAI;MAEF,MAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACgB,YAAP,CAAoBV,IAApB,CAAvB;MACAW,OAAO,CAACC,GAAR,CAAYd,QAAQ,CAACK,IAArB;;MACA,IAAGL,QAAQ,CAACC,MAAT,KAAkB,GAArB,EAAyB;QACvBF,QAAQ,CAAC;UACPG,IAAI,EAAEP,YAAY,CAACoB,eADZ;UAEPX,OAAO,EAAEJ,QAAQ,CAACK,IAAT,CAAcW;QAFhB,CAAD,CAAR;MAID,CALD,MAOA;QACEjB,QAAQ,CAAC;UACPG,IAAI,EAAEP,YAAY,CAACW,aADZ;UAEPF,OAAO,EAAEJ,QAAQ,CAACK,IAAT,CAAcE;QAFhB,CAAD,CAAR;MAID;IACF,CAjBD,CAiBE,OAAOC,KAAP,EAAc;MACdT,QAAQ,CAAC;QAAEG,IAAI,EAAEP,YAAY,CAACW,aAArB;QACPF,OAAO,EAAEI,KAAK,CAACR,QAAN,CAAeO;MADjB,CAAD,CAAR;IAGH;EACF,CAvBD;AAwBD,CAzBM;AA2BP,OAAO,MAAMU,OAAO,GAAIC,QAAD,IAAc;EACjC,OAAO,OAAOnB,QAAP,EAAiBoB,QAAjB,KAA8B;IACjC,IAAI;MACF,MAAM;QACJC,WAAW,EAAE;UAAEC;QAAF;MADT,IAEFF,QAAQ,EAFZ;MAIA,MAAMnB,QAAQ,GAAG,MAAMJ,MAAM,CAACqB,OAAP,CAAeC,QAAf,EAAyBG,IAAI,CAACC,YAA9B,CAAvB;;MACA,IAAGtB,QAAQ,CAACC,MAAT,KAAkB,GAArB,EAAyB;QACvBF,QAAQ,CAAC;UACPG,IAAI,EAAEP,YAAY,CAAC4B,UADZ;UAEPnB,OAAO,EAAEJ,QAAQ,CAACK,IAAT,CAAcmB;QAFhB,CAAD,CAAR;MAID,CALD,MAOA;QACEzB,QAAQ,CAAC;UACPG,IAAI,EAAEP,YAAY,CAACW,aADZ;UAEPF,OAAO,EAAEJ,QAAQ,CAACK,IAAT,CAAcE;QAFhB,CAAD,CAAR;MAID;IACF,CAnBD,CAmBE,OAAOC,KAAP,EAAc;MACdT,QAAQ,CAAC;QAAEG,IAAI,EAAEP,YAAY,CAACW,aAArB;QACNF,OAAO,EAAEI,KAAK,CAACR,QAAN,CAAeO;MADlB,CAAD,CAAR;IAGH;EACF,CAzBD;AA0BH,CA3BM"},"metadata":{},"sourceType":"module"}