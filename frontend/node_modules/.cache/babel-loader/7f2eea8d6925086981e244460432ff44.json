{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { VOICE_KEYS } from 'constants/index';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setVoice } from 'redux/actions/voiceAction'; // get custom voice to store into redux\n\nfunction useVoice() {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const customVoice = localStorage.getItem(VOICE_KEYS.LS_KEY);\n\n    if (customVoice) {\n      dispatch(setVoice(JSON.parse(customVoice)));\n    }\n  }, []);\n  return null;\n}\n\n_s(useVoice, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\nexport default useVoice;","map":{"version":3,"names":["VOICE_KEYS","useEffect","useDispatch","setVoice","useVoice","dispatch","customVoice","localStorage","getItem","LS_KEY","JSON","parse"],"sources":["C:/Users/PC2/Desktop/_blgashLMS/frontend/src/hooks/useVoice.js"],"sourcesContent":["import { VOICE_KEYS } from 'constants/index';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setVoice } from 'redux/actions/voiceAction';\n\n// get custom voice to store into redux\nfunction useVoice() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const customVoice = localStorage.getItem(VOICE_KEYS.LS_KEY);\n    if (customVoice) {\n      dispatch(setVoice(JSON.parse(customVoice)));\n    }\n  }, []);\n\n  return null;\n}\n\nexport default useVoice;\n"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,iBAA3B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,2BAAzB,C,CAEA;;AACA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMK,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBR,UAAU,CAACS,MAAhC,CAApB;;IACA,IAAIH,WAAJ,EAAiB;MACfD,QAAQ,CAACF,QAAQ,CAACO,IAAI,CAACC,KAAL,CAAWL,WAAX,CAAD,CAAT,CAAR;IACD;EACF,CALQ,EAKN,EALM,CAAT;EAOA,OAAO,IAAP;AACD;;GAXQF,Q;UACUF,W;;;AAYnB,eAAeE,QAAf"},"metadata":{},"sourceType":"module"}