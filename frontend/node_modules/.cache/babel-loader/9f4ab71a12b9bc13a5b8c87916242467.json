{"ast":null,"code":"import GRAMMAR_CONSTANT from \"../constants/grammarConstant\";\nconst initialState = {\n  questions: [],\n  grammars: [],\n  grammar: [],\n  levels: [],\n  message: null,\n  isGrammarLoading: false\n};\n\nconst grammarReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GRAMMAR_CONSTANT.SET_GRAMMAR_LOADING:\n      return { ...state,\n        isGrammarLoading: payload\n      };\n\n    case GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR:\n      return { ...state,\n        grammars: [],\n        message: payload,\n        isGrammarLoading: true\n      };\n\n    case GRAMMAR_CONSTANT.GET_GRAMMAR:\n      return { ...state,\n        grammar: payload.grammar,\n        questions: payload.questions\n      };\n\n    case GRAMMAR_CONSTANT.GET_GRAMMAR_BY_ID:\n      return { ...state,\n        grammar: payload.grammar\n      };\n\n    case GRAMMAR_CONSTANT.CREATE_GRAMMAR:\n      return { ...state,\n        grammar: payload,\n        grammars: [...state.grammars, payload]\n      };\n\n    case GRAMMAR_CONSTANT.EDIT_GRAMMAR:\n      const newGrammars = state.grammars.map(grammar => grammar._id === payload._id ? payload : grammar);\n      return { ...state,\n        grammar: payload,\n        grammars: newGrammars\n      };\n\n    case GRAMMAR_CONSTANT.DELETE_GRAMMAR:\n      return { ...state,\n        grammars: state.grammars.filter(grammar => grammar._id !== payload)\n      };\n\n    case GRAMMAR_CONSTANT.GET_ALL_GRAMMAR:\n      return { ...state,\n        grammars: payload\n      };\n\n    case GRAMMAR_CONSTANT.GET_GRAMMAR_BY_LEVEL:\n      return { ...state,\n        grammars: payload\n      };\n\n    case GRAMMAR_CONSTANT.GET_GRAMMAR_LEVELS:\n      return { ...state,\n        levels: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default grammarReducer;","map":{"version":3,"names":["GRAMMAR_CONSTANT","initialState","questions","grammars","grammar","levels","message","isGrammarLoading","grammarReducer","state","action","type","payload","SET_GRAMMAR_LOADING","SET_GRAMMAR_ERROR","GET_GRAMMAR","GET_GRAMMAR_BY_ID","CREATE_GRAMMAR","EDIT_GRAMMAR","newGrammars","map","_id","DELETE_GRAMMAR","filter","GET_ALL_GRAMMAR","GET_GRAMMAR_BY_LEVEL","GET_GRAMMAR_LEVELS"],"sources":["C:/Users/PC2/Desktop/_blgashLMS/frontend/src/redux/reducers/grammarReducer.js"],"sourcesContent":["import GRAMMAR_CONSTANT from \"../constants/grammarConstant\";\n\nconst initialState = {\n    questions: [],\n    grammars: [],\n    grammar: [],\n    levels:[],\n    message: null,\n    isGrammarLoading: false,\n}\nconst grammarReducer = (state = initialState, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case GRAMMAR_CONSTANT.SET_GRAMMAR_LOADING:\n      return {\n        ...state,\n        isGrammarLoading: payload,\n      }\n    case GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR:\n      return {\n        ...state,\n        grammars:[],\n        message: payload,\n        isGrammarLoading: true,\n      }\n    case GRAMMAR_CONSTANT.GET_GRAMMAR:\n      return {\n        ...state,\n        grammar: payload.grammar,\n        questions: payload.questions,\n      }\n     case GRAMMAR_CONSTANT.GET_GRAMMAR_BY_ID:\n      return {\n        ...state,\n        grammar: payload.grammar,\n      }\n    case GRAMMAR_CONSTANT.CREATE_GRAMMAR:\n        return {\n          ...state,\n          grammar: payload,\n          grammars: [...state.grammars, payload],\n        }\n    case GRAMMAR_CONSTANT.EDIT_GRAMMAR:\n        const newGrammars = state.grammars.map((grammar) =>\n              grammar._id === payload._id ? payload : grammar\n        )\n        return {\n            ...state,\n            grammar: payload,\n            grammars: newGrammars,\n        }\n    case GRAMMAR_CONSTANT.DELETE_GRAMMAR:\n        return {\n            ...state,\n            grammars: state.grammars.filter(\n            (grammar) => grammar._id !== payload\n            ),\n        }\n    case GRAMMAR_CONSTANT.GET_ALL_GRAMMAR:\n        return {\n            ...state,\n            grammars: payload,\n        }\n    case GRAMMAR_CONSTANT.GET_GRAMMAR_BY_LEVEL:\n        return {\n            ...state,\n            grammars: payload,\n        }\n    case GRAMMAR_CONSTANT.GET_GRAMMAR_LEVELS:\n        return {\n            ...state,\n            levels: payload,\n        }      \n    default:\n      return state\n  }\n}\n\nexport default grammarReducer\n"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,8BAA7B;AAEA,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EADM;EAEjBC,QAAQ,EAAE,EAFO;EAGjBC,OAAO,EAAE,EAHQ;EAIjBC,MAAM,EAAC,EAJU;EAKjBC,OAAO,EAAE,IALQ;EAMjBC,gBAAgB,EAAE;AAND,CAArB;;AAQA,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBR,YAAyB;EAAA,IAAXS,MAAW;EACvD,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBF,MAA1B;;EACA,QAAQC,IAAR;IACE,KAAKX,gBAAgB,CAACa,mBAAtB;MACE,OAAO,EACL,GAAGJ,KADE;QAELF,gBAAgB,EAAEK;MAFb,CAAP;;IAIF,KAAKZ,gBAAgB,CAACc,iBAAtB;MACE,OAAO,EACL,GAAGL,KADE;QAELN,QAAQ,EAAC,EAFJ;QAGLG,OAAO,EAAEM,OAHJ;QAILL,gBAAgB,EAAE;MAJb,CAAP;;IAMF,KAAKP,gBAAgB,CAACe,WAAtB;MACE,OAAO,EACL,GAAGN,KADE;QAELL,OAAO,EAAEQ,OAAO,CAACR,OAFZ;QAGLF,SAAS,EAAEU,OAAO,CAACV;MAHd,CAAP;;IAKD,KAAKF,gBAAgB,CAACgB,iBAAtB;MACC,OAAO,EACL,GAAGP,KADE;QAELL,OAAO,EAAEQ,OAAO,CAACR;MAFZ,CAAP;;IAIF,KAAKJ,gBAAgB,CAACiB,cAAtB;MACI,OAAO,EACL,GAAGR,KADE;QAELL,OAAO,EAAEQ,OAFJ;QAGLT,QAAQ,EAAE,CAAC,GAAGM,KAAK,CAACN,QAAV,EAAoBS,OAApB;MAHL,CAAP;;IAKJ,KAAKZ,gBAAgB,CAACkB,YAAtB;MACI,MAAMC,WAAW,GAAGV,KAAK,CAACN,QAAN,CAAeiB,GAAf,CAAoBhB,OAAD,IACjCA,OAAO,CAACiB,GAAR,KAAgBT,OAAO,CAACS,GAAxB,GAA8BT,OAA9B,GAAwCR,OAD1B,CAApB;MAGA,OAAO,EACH,GAAGK,KADA;QAEHL,OAAO,EAAEQ,OAFN;QAGHT,QAAQ,EAAEgB;MAHP,CAAP;;IAKJ,KAAKnB,gBAAgB,CAACsB,cAAtB;MACI,OAAO,EACH,GAAGb,KADA;QAEHN,QAAQ,EAAEM,KAAK,CAACN,QAAN,CAAeoB,MAAf,CACTnB,OAAD,IAAaA,OAAO,CAACiB,GAAR,KAAgBT,OADnB;MAFP,CAAP;;IAMJ,KAAKZ,gBAAgB,CAACwB,eAAtB;MACI,OAAO,EACH,GAAGf,KADA;QAEHN,QAAQ,EAAES;MAFP,CAAP;;IAIJ,KAAKZ,gBAAgB,CAACyB,oBAAtB;MACI,OAAO,EACH,GAAGhB,KADA;QAEHN,QAAQ,EAAES;MAFP,CAAP;;IAIJ,KAAKZ,gBAAgB,CAAC0B,kBAAtB;MACI,OAAO,EACH,GAAGjB,KADA;QAEHJ,MAAM,EAAEO;MAFL,CAAP;;IAIJ;MACE,OAAOH,KAAP;EA9DJ;AAgED,CAlED;;AAoEA,eAAeD,cAAf"},"metadata":{},"sourceType":"module"}