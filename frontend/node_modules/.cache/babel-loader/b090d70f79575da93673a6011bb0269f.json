{"ast":null,"code":"import { COLOR_VAR_KEYS, VOICE_KEYS, DEFAULTS, THEME_KEYS } from \"./../constants/index\";\nconst htmlRoot = document.querySelector(\":root\"); // prevent execute continuously a function\n\nexport const debounce = function () {\n  let timer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let cbFn = arguments.length > 1 ? arguments[1] : undefined;\n  let delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 350;\n\n  if (timer) {\n    clearTimeout(timer);\n  }\n\n  return setTimeout(cbFn, delay);\n}; // compare 2 arrays\n\nexport const equalArray = (a, b) => {\n  return Array.isArray(a) && Array.isArray(b) && a.length === b.length && a.every((val, index) => val === b[index]);\n}; // convert image to Base64\n\nexport const convertImageToBase64 = image => {\n  const reader = new FileReader();\n  reader.readAsDataURL(image);\n  return new Promise(resolve => {\n    reader.onloadend = () => {\n      resolve(reader.result);\n    };\n  });\n}; // get current root palettes\n\nfunction getRootPalettes() {\n  let palettes = [];\n  const rootStyles = getComputedStyle(htmlRoot);\n  COLOR_VAR_KEYS.forEach(item => {\n    let color = rootStyles.getPropertyValue(item.key);\n    palettes.push({ ...item,\n      color: color[0] === \"#\" ? color : color.slice(1) // output ' #123456' => slice(1) = '#123456'\n\n    });\n  });\n  return palettes;\n} // get custom palettes from local storage\n\n\nexport const getCustomPalettes = () => {\n  const palettes = localStorage.getItem(THEME_KEYS.PALETTE_KEY);\n\n  if (!palettes) {\n    const newPalettes = getRootPalettes();\n    localStorage.setItem(THEME_KEYS.PALETTE_KEY, JSON.stringify(newPalettes));\n    return newPalettes;\n  } else {\n    return JSON.parse(palettes);\n  }\n}; // set palettes for root\n\nexport const setRootPalettes = () => {\n  const palettes = getCustomPalettes();\n  palettes === null || palettes === void 0 ? void 0 : palettes.forEach(item => htmlRoot.style.setProperty(item.key, item.color));\n}; // get window voice list\n\nexport const getSpeechSynthesis = () => {\n  return new Promise(resolve => {\n    let synth = window.speechSynthesis;\n    let intervalId;\n    intervalId = setInterval(() => {\n      if (synth.getVoices().length !== 0) {\n        clearInterval(intervalId);\n        resolve(synth.getVoices());\n      }\n    }, 20);\n  });\n}; // update or add custom voice in local storage\n\nexport const updateLSVoice = (key, value) => {\n  let current = localStorage.getItem(VOICE_KEYS.LS_KEY);\n  let newLSVoice = {};\n\n  if (current) {\n    newLSVoice = JSON.parse(current);\n    newLSVoice[key] = value;\n  } else {\n    newLSVoice = {\n      voiceURI: DEFAULTS.VOICE_URI,\n      speed: DEFAULTS.VOICE_SPEED,\n      volume: DEFAULTS.VOICE_VOLUME\n    };\n    newLSVoice[key] = value;\n  }\n\n  localStorage.setItem(VOICE_KEYS.LS_KEY, JSON.stringify(newLSVoice));\n}; // optimize images\n\nexport const cloudinaryImgOptimize = function () {\n  let originSrc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let fAuto = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  let qAuto = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let others = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"\";\n  if (!originSrc) return \"\";\n  const cloudinaryBaseURL = \"https://res.cloudinary.com/dynonary/image/upload\";\n  const index = originSrc.indexOf(cloudinaryBaseURL); // Not cloudinary source\n\n  if (index === -1) {\n    return originSrc;\n  }\n\n  let optimize = `${width > 0 ? `w_${width},` : \"\"}${height > 0 ? `h_${height},` : \"\"}${fAuto ? \"f_auto,\" : \"\"}${qAuto ? \"q_auto,\" : \"\"}${others && others !== \"\" ? others : \"\"}`;\n  if (optimize[optimize.length - 1] === \",\") optimize = optimize.slice(0, optimize.length - 1);\n  return originSrc.replace(cloudinaryBaseURL, `${cloudinaryBaseURL}/${optimize}`);\n};\nexport const addOrDelItemInArray = function () {\n  let arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let item = arguments.length > 1 ? arguments[1] : undefined;\n  if (!arr || !Array.isArray(arr)) return arr;\n  const index = arr.findIndex(i => i === item);\n\n  if (index === -1) {\n    arr.push(item);\n    return arr;\n  }\n\n  arr.splice(index, 1);\n  return arr;\n};\nexport const formatDate = function () {\n  let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n\n  try {\n    const d = new Date(date);\n    const day = `0${d.getDate()}`.slice(-2);\n    const m = `0${d.getMonth() + 1}`.slice(-2);\n    const y = d.getFullYear();\n    return `${day}-${m}-${y}`;\n  } catch (error) {\n    return date;\n  }\n}; // Random number array between start and end\n\nexport const randomNumberArray = (start, end) => {\n  return Array(end - start + 1).fill().map((_, idx) => start + idx);\n}; // Convert time\n\nexport const convertTime = value => {\n  let hours = Math.floor(value / 3600);\n  let minutes = Math.floor((value - hours * 3600) / 60);\n  let seconds = value - hours * 3600 - minutes * 60;\n  return {\n    hours,\n    minutes,\n    seconds\n  };\n};","map":{"version":3,"names":["COLOR_VAR_KEYS","VOICE_KEYS","DEFAULTS","THEME_KEYS","htmlRoot","document","querySelector","debounce","timer","cbFn","delay","clearTimeout","setTimeout","equalArray","a","b","Array","isArray","length","every","val","index","convertImageToBase64","image","reader","FileReader","readAsDataURL","Promise","resolve","onloadend","result","getRootPalettes","palettes","rootStyles","getComputedStyle","forEach","item","color","getPropertyValue","key","push","slice","getCustomPalettes","localStorage","getItem","PALETTE_KEY","newPalettes","setItem","JSON","stringify","parse","setRootPalettes","style","setProperty","getSpeechSynthesis","synth","window","speechSynthesis","intervalId","setInterval","getVoices","clearInterval","updateLSVoice","value","current","LS_KEY","newLSVoice","voiceURI","VOICE_URI","speed","VOICE_SPEED","volume","VOICE_VOLUME","cloudinaryImgOptimize","originSrc","width","height","fAuto","qAuto","others","cloudinaryBaseURL","indexOf","optimize","replace","addOrDelItemInArray","arr","findIndex","i","splice","formatDate","date","Date","d","day","getDate","m","getMonth","y","getFullYear","error","randomNumberArray","start","end","fill","map","_","idx","convertTime","hours","Math","floor","minutes","seconds"],"sources":["C:/Users/PC2/Desktop/_blgashLMS/frontend/src/helper/index.js"],"sourcesContent":["import {\n  COLOR_VAR_KEYS,\n  VOICE_KEYS,\n  DEFAULTS,\n  THEME_KEYS,\n} from \"./../constants/index\";\nconst htmlRoot = document.querySelector(\":root\");\n\n// prevent execute continuously a function\nexport const debounce = (timer = null, cbFn, delay = 350) => {\n  if (timer) {\n    clearTimeout(timer);\n  }\n  return setTimeout(cbFn, delay);\n};\n\n// compare 2 arrays\nexport const equalArray = (a, b) => {\n  return (\n    Array.isArray(a) &&\n    Array.isArray(b) &&\n    a.length === b.length &&\n    a.every((val, index) => val === b[index])\n  );\n};\n\n// convert image to Base64\nexport const convertImageToBase64 = (image) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(image);\n  return new Promise((resolve) => {\n    reader.onloadend = () => {\n      resolve(reader.result);\n    };\n  });\n};\n\n// get current root palettes\nfunction getRootPalettes() {\n  let palettes = [];\n  const rootStyles = getComputedStyle(htmlRoot);\n\n  COLOR_VAR_KEYS.forEach((item) => {\n    let color = rootStyles.getPropertyValue(item.key);\n\n    palettes.push({\n      ...item,\n      color: color[0] === \"#\" ? color : color.slice(1), // output ' #123456' => slice(1) = '#123456'\n    });\n  });\n\n  return palettes;\n}\n\n// get custom palettes from local storage\nexport const getCustomPalettes = () => {\n  const palettes = localStorage.getItem(THEME_KEYS.PALETTE_KEY);\n  if (!palettes) {\n    const newPalettes = getRootPalettes();\n    localStorage.setItem(THEME_KEYS.PALETTE_KEY, JSON.stringify(newPalettes));\n    return newPalettes;\n  } else {\n    return JSON.parse(palettes);\n  }\n};\n\n// set palettes for root\nexport const setRootPalettes = () => {\n  const palettes = getCustomPalettes();\n  palettes?.forEach((item) => htmlRoot.style.setProperty(item.key, item.color));\n};\n\n// get window voice list\nexport const getSpeechSynthesis = () => {\n  return new Promise((resolve) => {\n    let synth = window.speechSynthesis;\n    let intervalId;\n\n    intervalId = setInterval(() => {\n      if (synth.getVoices().length !== 0) {\n        clearInterval(intervalId);\n        resolve(synth.getVoices());\n      }\n    }, 20);\n  });\n};\n\n// update or add custom voice in local storage\nexport const updateLSVoice = (key, value) => {\n  let current = localStorage.getItem(VOICE_KEYS.LS_KEY);\n  let newLSVoice = {};\n\n  if (current) {\n    newLSVoice = JSON.parse(current);\n    newLSVoice[key] = value;\n  } else {\n    newLSVoice = {\n      voiceURI: DEFAULTS.VOICE_URI,\n      speed: DEFAULTS.VOICE_SPEED,\n      volume: DEFAULTS.VOICE_VOLUME,\n    };\n    newLSVoice[key] = value;\n  }\n\n  localStorage.setItem(VOICE_KEYS.LS_KEY, JSON.stringify(newLSVoice));\n};\n\n// optimize images\nexport const cloudinaryImgOptimize = (\n  originSrc = \"\",\n  width = 0,\n  height = 0,\n  fAuto = true,\n  qAuto = true,\n  others = \"\"\n) => {\n  if (!originSrc) return \"\";\n\n  const cloudinaryBaseURL = \"https://res.cloudinary.com/dynonary/image/upload\";\n  const index = originSrc.indexOf(cloudinaryBaseURL);\n\n  // Not cloudinary source\n  if (index === -1) {\n    return originSrc;\n  }\n\n  let optimize = `${width > 0 ? `w_${width},` : \"\"}${\n    height > 0 ? `h_${height},` : \"\"\n  }${fAuto ? \"f_auto,\" : \"\"}${qAuto ? \"q_auto,\" : \"\"}${\n    others && others !== \"\" ? others : \"\"\n  }`;\n\n  if (optimize[optimize.length - 1] === \",\")\n    optimize = optimize.slice(0, optimize.length - 1);\n\n  return originSrc.replace(\n    cloudinaryBaseURL,\n    `${cloudinaryBaseURL}/${optimize}`\n  );\n};\n\nexport const addOrDelItemInArray = (arr = [], item) => {\n  if (!arr || !Array.isArray(arr)) return arr;\n\n  const index = arr.findIndex((i) => i === item);\n\n  if (index === -1) {\n    arr.push(item);\n    return arr;\n  }\n\n  arr.splice(index, 1);\n  return arr;\n};\n\nexport const formatDate = (date = new Date()) => {\n  try {\n    const d = new Date(date);\n    const day = `0${d.getDate()}`.slice(-2);\n    const m = `0${d.getMonth() + 1}`.slice(-2);\n    const y = d.getFullYear();\n    return `${day}-${m}-${y}`;\n  } catch (error) {\n    return date;\n  }\n};\n\n// Random number array between start and end\nexport const randomNumberArray = (start, end) => {\n  return Array(end - start + 1).fill().map((_, idx) => start + idx)\n}\n\n// Convert time\nexport const convertTime = (value) => {\n  let hours = Math.floor(value / 3600);\n  let minutes = Math.floor((value - (hours * 3600)) / 60);\n  let seconds = value - (hours * 3600) - (minutes * 60);\n  return {\n    hours,\n    minutes,\n    seconds\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}