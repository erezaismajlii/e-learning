{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC2\\\\Desktop\\\\_blgashLMS\\\\frontend\\\\src\\\\components\\\\WordAdmin\\\\AddWord\\\\PhoneticInput.js\",\n    _s = $RefreshSig$();\n\nimport Grid from '@material-ui/core/Grid';\nimport InputCustom from 'components/UI/InputCustom';\nimport PhoneticKeyboard from 'components/UI/PhoneticKeyboard';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport InformationTooltip from './InformationTooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PhoneticInput(props) {\n  _s();\n\n  const {\n    value,\n    errorMessage,\n    error,\n    register,\n    resetFlag,\n    onChange,\n    ...restProps\n  } = props;\n  const {\n    inputProps\n  } = restProps;\n  const {\n    ref,\n    ...rest\n  } = register;\n  const inputRef = useRef(null);\n  const [openKeyboard, setOpenKeyboard] = useState(false);\n  const [phonetic, setPhonetic] = useState(value);\n\n  const onCloseKeyboard = () => setOpenKeyboard(false);\n\n  const onInput = c => {\n    setPhonetic(phonetic + c);\n    inputRef.current.focus();\n  };\n\n  useEffect(() => {\n    if (!resetFlag) return; // reset value if parent component reset, except first render\n\n    setPhonetic('');\n  }, [resetFlag]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      lg: 4,\n      children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n        onClick: () => setOpenKeyboard(true),\n        className: \"w-100\",\n        label: \"Notation(*)\",\n        error: error,\n        value: phonetic,\n        inputProps: { ...inputProps,\n          ...rest,\n          ref: e => {\n            ref(e);\n            inputRef.current = e;\n          }\n        },\n        onChange: e => {\n          setPhonetic(e.target.value);\n          onChange(e);\n        },\n        endAdornment: /*#__PURE__*/_jsxDEV(InformationTooltip, {\n          title: \"Enter the phonetic (phonetic) character of the new word. Example: f\\u0259\\u02C8net\\u026Ak\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), openKeyboard && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(PhoneticKeyboard, {\n        onInput: onInput,\n        onClose: onCloseKeyboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PhoneticInput, \"dmTBrImBqO/NhsJe4l59xWiUJIg=\");\n\n_c = PhoneticInput;\nPhoneticInput.propTypes = {\n  error: PropTypes.bool,\n  errorMessage: PropTypes.string,\n  register: PropTypes.any,\n  resetFlag: PropTypes.number,\n  valueInput: PropTypes.string,\n  onChange: PropTypes.func\n};\nPhoneticInput.defaultProps = {\n  error: false,\n  errorMessage: null,\n  resetFlag: 0,\n  valueInput: '',\n  onChange: function () {}\n};\nexport default PhoneticInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneticInput\");","map":{"version":3,"names":["Grid","InputCustom","PhoneticKeyboard","PropTypes","React","useEffect","useRef","useState","InformationTooltip","PhoneticInput","props","value","errorMessage","error","register","resetFlag","onChange","restProps","inputProps","ref","rest","inputRef","openKeyboard","setOpenKeyboard","phonetic","setPhonetic","onCloseKeyboard","onInput","c","current","focus","e","target","propTypes","bool","string","any","number","valueInput","func","defaultProps"],"sources":["C:/Users/PC2/Desktop/_blgashLMS/frontend/src/components/WordAdmin/AddWord/PhoneticInput.js"],"sourcesContent":["import Grid from '@material-ui/core/Grid';\nimport InputCustom from 'components/UI/InputCustom';\nimport PhoneticKeyboard from 'components/UI/PhoneticKeyboard';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport InformationTooltip from './InformationTooltip';\n\nfunction PhoneticInput(props) {\n  const { value, errorMessage, error, register, resetFlag, onChange,...restProps } = props;\n  const { inputProps } = restProps;\n  const { ref, ...rest } = register;\n  const inputRef = useRef(null);\n\n  const [openKeyboard, setOpenKeyboard] = useState(false);\n  const [phonetic, setPhonetic] = useState(value);\n\n  const onCloseKeyboard = () => setOpenKeyboard(false);\n\n  const onInput = (c) => {\n    setPhonetic(phonetic + c);\n    inputRef.current.focus();\n  };\n\n  useEffect(() => {\n    if (!resetFlag) return;\n    // reset value if parent component reset, except first render\n    setPhonetic('');\n  }, [resetFlag]);\n\n  return (\n    <>\n      <Grid item xs={12} md={6} lg={4}>\n        <InputCustom\n          onClick={() => setOpenKeyboard(true)}\n          className=\"w-100\"\n          label=\"Notation(*)\"\n          error={error}\n          value={phonetic}\n          inputProps={{\n            ...inputProps,\n            ...rest,\n            ref: (e) => {\n              ref(e);\n              inputRef.current = e;\n            },\n          }}\n          onChange={(e) => {\n            setPhonetic(e.target.value);\n            onChange(e);\n          }}\n          endAdornment={\n            <InformationTooltip title=\"Enter the phonetic (phonetic) character of the new word. Example: fəˈnetɪk\" />\n          }\n        />\n        {errorMessage && <p className=\"text-error\">{errorMessage}</p>}\n      </Grid>\n\n      {openKeyboard && (\n        <Grid item xs={12}>\n          <PhoneticKeyboard onInput={onInput} onClose={onCloseKeyboard} />\n        </Grid>\n      )}\n    </>\n  );\n}\n\nPhoneticInput.propTypes = {\n  error: PropTypes.bool,\n  errorMessage: PropTypes.string,\n  register: PropTypes.any,\n  resetFlag: PropTypes.number,\n  valueInput: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nPhoneticInput.defaultProps = {\n  error: false,\n  errorMessage: null,\n  resetFlag: 0,\n  valueInput:'',\n  onChange: function () {},\n};\n\nexport default PhoneticInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}