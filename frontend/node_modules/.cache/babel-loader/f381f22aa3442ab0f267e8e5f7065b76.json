{"ast":null,"code":"import axios from \"axios\";\nconst URL = `/api/word`;\nconst wordApi = {\n  getWord: function () {\n    let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return axios.get(`${URL}/get-word-details`, {\n      params: {\n        id\n      }\n    });\n  },\n  getWordDetails: function () {\n    let word = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return axios.get(`${URL}/get-word-by-word`, {\n      params: {\n        word\n      }\n    });\n  },\n  getWordByTopic: topic => {\n    return axios.get(`${URL}/get-word-by-topic/${topic}`);\n  },\n  searchWord: function () {\n    let word = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let isCompact = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return axios.get(`${URL}/search-word`, {\n      params: {\n        word,\n        isCompact\n      }\n    });\n  },\n  getWordTopics: () => {\n    return axios.get(`${URL}/get-word-topics`);\n  },\n  getAllWord: () => {\n    return axios.get(`${URL}/get-all-word`);\n  },\n  postWord: wordData => {\n    return axios.post(`${URL}/post-word`, { ...wordData\n    }, {\n      header: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    });\n  },\n  putWord: (id, wordData) => {\n    return axios.put(`${URL}/put-word/${id}`, { ...wordData\n    }, {\n      params: {\n        id\n      },\n      header: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    });\n  },\n  deleteWord: function () {\n    let word = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    return axios.delete(`${URL}/delete-word`, {\n      params: {\n        word,\n        type\n      }\n    });\n  },\n  checkWordExist: function () {\n    let word = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    return axios.get(`${URL}/exist-word`, {\n      params: {\n        word,\n        type\n      }\n    });\n  },\n  getWordList: function () {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8;\n    let packInfo = arguments.length > 2 ? arguments[2] : undefined;\n    let sortType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'rand';\n    return axios.get(`${URL}/get-word-pack`, {\n      params: {\n        page,\n        perPage,\n        packInfo: JSON.stringify(packInfo),\n        sortType\n      }\n    });\n  },\n  getWordTopicGallery: function () {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8;\n    let packInfo = arguments.length > 2 ? arguments[2] : undefined;\n    return axios.get(`${URL}/get-word-topic-gallery`, {\n      params: {\n        page,\n        perPage,\n        packInfo: JSON.stringify(packInfo)\n      }\n    });\n  },\n  getWordTopic: packInfo => {\n    return axios.get(`${URL}/get-word-topic-slide`, {\n      params: {\n        packInfo: JSON.stringify(packInfo)\n      }\n    });\n  }\n};\nexport default wordApi;","map":{"version":3,"names":["axios","URL","wordApi","getWord","id","get","params","getWordDetails","word","getWordByTopic","topic","searchWord","isCompact","getWordTopics","getAllWord","postWord","wordData","post","header","putWord","put","deleteWord","type","delete","checkWordExist","getWordList","page","perPage","packInfo","sortType","JSON","stringify","getWordTopicGallery","getWordTopic"],"sources":["C:/Users/PC2/Desktop/_blgashLMS/frontend/src/apis/wordApi.js"],"sourcesContent":["import axios from \"axios\";\nconst URL = `/api/word`;\n\nconst wordApi = {\n  getWord: (id = '') => {\n    return axios.get(`${URL}/get-word-details`, { params: { id } });\n  },\n\n  getWordDetails: (word = '') => {\n    return axios.get(`${URL}/get-word-by-word`, { params: { word } });\n  },\n\n  getWordByTopic: (topic) => {\n    return axios.get(`${URL}/get-word-by-topic/${topic}`);\n  },\n\n  searchWord: (word = '', isCompact = false) => {\n    return axios.get(`${URL}/search-word`, {\n      params: { word, isCompact },\n    });\n  },\n\n  getWordTopics: () => {\n    return axios.get(`${URL}/get-word-topics`);\n  },\n\n  getAllWord: () => {\n    return axios.get(`${URL}/get-all-word`);\n  },\n\n  postWord: (wordData) => {\n    return axios.post(\n      `${URL}/post-word`,\n      { ...wordData },\n      {\n        header: { \"content-type\": \"multipart/form-data\" },\n      }\n    );\n  },\n\n  putWord: (id, wordData) => {\n    return axios.put(\n      `${URL}/put-word/${id}`,\n      { ...wordData },\n      {\n        params: { id },\n        header: { \"content-type\": \"multipart/form-data\" },\n      }\n    );\n  },\n\n  deleteWord: (word='', type='') => {\n    return axios.delete(`${URL}/delete-word`, {params: { word, type}});\n  },\n\n  checkWordExist: ( word='', type='') => {\n    return axios.get(`${URL}/exist-word`, {params: { word, type}});\n  },\n\n  getWordList: (page = 1, perPage = 8, packInfo, sortType = 'rand') => {\n    return axios.get(`${URL}/get-word-pack`, {\n      params: { page, perPage, packInfo: JSON.stringify(packInfo), sortType },\n    });\n  },\n\n  getWordTopicGallery: (page = 1, perPage = 8, packInfo) => {\n    return axios.get(`${URL}/get-word-topic-gallery`, {\n      params: { page, perPage, packInfo: JSON.stringify(packInfo) },\n    });\n  },\n\n  getWordTopic: ( packInfo) => {\n    return axios.get(`${URL}/get-word-topic-slide`, {\n      params: { packInfo: JSON.stringify(packInfo) },\n    });\n  },\n}\n\nexport default wordApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}