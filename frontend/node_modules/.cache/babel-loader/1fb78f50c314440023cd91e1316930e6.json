{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC2\\\\Desktop\\\\_blgashLMS\\\\frontend\\\\src\\\\pages\\\\Grammar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport useTitle from \"../hooks/useTitle\";\nimport { VideoCard } from \"material-ui-player\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getGrammar } from \"../redux/actions/grammarAction\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from \"../constants/index\";\nimport incorrectIcon from \"assets/icons/checkAnswer/incorrect.gif\";\nimport correctIcon from \"assets/icons/checkAnswer/correct.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(() => ({\n  borderTopic: {\n    borderStyle: \"solid\",\n    borderColor: \"initial\",\n    borderWidth: \"1px\",\n    backgroundColor: \"#ccff66\",\n    width: \"700px\",\n    height: \"auto\"\n  },\n  grammarbox: {\n    backgroundColor: \"#99ffff\",\n    padding: \"10px 10px\",\n    border: \"1px solid #666\",\n    color: \"black\",\n    marginBottom: \"10px\"\n  },\n  picture: {\n    width: \"50rem\",\n    height: \"30rem\",\n    marginLeft: \"15rem\"\n  },\n  tabcontents: {\n    border: \"1px solid #2eb8b8\",\n    padding: \"10px\",\n    backgroundColor: \"#FFF\",\n    borderRadius: \"0 3px 3px 3px\"\n  }\n}));\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nexport default function GrammarPage() {\n  _s();\n\n  useTitle(\"Grammar\");\n  const classes = useStyle();\n  const [value, setValue] = useState(0);\n  const [checkAnswer, setCheckAnswer] = useState(false);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const grammarId = useParams().id;\n  const {\n    grammar,\n    questions\n  } = useSelector(state => state.grammarReducer);\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(getGrammar(grammarId), [dispatch]));\n  const [answers, setAnswers] = useState([]);\n\n  const getText = text => {\n    let Text = [];\n\n    if (text) {\n      Text = text.split(\"\\n\");\n    }\n\n    return Text;\n  };\n\n  let imgSrc = null;\n\n  if (grammar) {\n    imgSrc = cloudinaryImgOptimize(grammar.Image ? grammar.Image : DEFAULTS.IMAGE_SRC, 200, 200, true, true);\n  }\n\n  const handleChange = (_event, newValue) => {\n    setValue(newValue);\n  };\n\n  const [isCorrect, setisCorrect] = useState([]);\n\n  const handleClickShowAnswer = () => {\n    setShowAnswer(true);\n  };\n\n  const handleClickReset = () => {\n    if (window.confirm(\"Do you want reload page again?\")) {\n      window.location.reload();\n    }\n  };\n\n  const handleCheck = (index, i) => {\n    if (answers[index]) {\n      if (answers[index].includes(i)) {\n        for (var j = 0; j < answers[index].length; j++) {\n          if (answers[index][j] == i) {\n            answers[index].splice(j, 1);\n          }\n        }\n      } else {\n        answers[index].push(i);\n      }\n    } else {\n      let ar = [];\n      answers[index] = ar;\n      answers[index].push(i);\n    }\n  };\n\n  const handleClickCheckAnswer = () => {\n    if (answers.length > 0) {\n      for (var i = 0; i < answers.length; i++) {\n        if (answers[i]) {\n          if (answers[i].length > 0) {\n            let numberCorrect = 0;\n\n            for (let j = 0; j < questions[i].Answers.length; j++) {\n              if (questions[i].Answers[j].isCorrect === true) {\n                numberCorrect += 1;\n              }\n\n              console.log(answers[i]);\n            }\n\n            if (numberCorrect === answers[i].length) {\n              isCorrect[i] = true;\n\n              for (let k = 0; k < answers[i].length; k++) {\n                if (questions[i].Answers[answers[i][k]].isCorrect == false) {\n                  isCorrect[i] = false;\n                }\n              }\n            } else {\n              isCorrect[i] = false;\n            } // if(answers[i].length>1) {isCorrect[i]=false;}\n            // else{\n            //   if(questions[i].Answers[answers[i][0]].isCorrect==true) {isCorrect[i]=true;}\n            //   if(questions[i].Answers[answers[i][0]].isCorrect==false) {isCorrect[i]=false;}\n\n          } else {\n            if (window.confirm(\"Chọn đáp án cho tất cả câu hỏi.\")) {\n              window.close();\n            }\n          }\n        } else {\n          if (window.confirm(\"Chọn đáp án cho tất cả câu hỏi.\")) {\n            window.close();\n          }\n        }\n      }\n    } else {\n      if (window.confirm(\"Chọn đáp án cho tất cả câu hỏi.\")) {\n        window.close();\n      }\n    }\n\n    setCheckAnswer(true);\n    setShowAnswer(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          children: grammar.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: grammar.Content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true), grammar.Video ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(VideoCard, {\n          src: isPlaying === true && grammar.Video,\n          onEnded: () => setIsPlaying(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.picture,\n        src: imgSrc,\n        alt: \"\",\n        align: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), grammar.Audio && /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: grammar.Audio,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), \"Your browser does not support the audio element.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            borderBottom: 1,\n            borderColor: \"divider\",\n            backgroundColor: \"#2eb8b8\",\n            color: \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            value: value,\n            onChange: handleChange,\n            \"aria-label\": \"basic tabs example\",\n            indicatorColor: \"primary\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Script\",\n              ...a11yProps(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Grammar\",\n              ...a11yProps(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Quiz\",\n              ...a11yProps(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.tabcontents,\n          children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n            value: value,\n            index: 0,\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              dangerouslySetInnerHTML: {\n                __html: grammar.Script\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            value: value,\n            index: 1,\n            children: grammar.Items && grammar.Items.map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.grammarbox,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"Point \", index + 1, \" : \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 25\n                  }, this), item.Point]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: getText(item.Examples).map(it => /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  align: \"justify\",\n                  children: it\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            value: value,\n            index: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Answer the following questions about the interview.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), questions && questions.map((question, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [index + 1, \") \", question.Content, checkAnswer && isCorrect[index] == true && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: correctIcon,\n                    alt: \"Correct!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 25\n                }, this), checkAnswer && isCorrect[index] == false && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: incorrectIcon,\n                    alt: \"Correct!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: question.Answers.map((item, i) => showAnswer && item.isCorrect == true ? /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    color: \"primary\",\n                    id: `${item}-${i}`,\n                    onClick: () => handleCheck(index, i)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 31\n                  }, this),\n                  label: /*#__PURE__*/_jsxDEV(Typography, {\n                    style: {\n                      color: \"#008000\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: item.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 31\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    color: \"primary\",\n                    id: `${item}-${i}`,\n                    onClick: () => handleCheck(index, i)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 31\n                  }, this),\n                  label: item.content\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => handleClickCheckAnswer(),\n              children: \"Check Answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => handleClickReset(),\n              children: \"Reset Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => handleClickShowAnswer(),\n              children: \"Show Answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(GrammarPage, \"Cz90VF9PDuvx49ymbvi/VB/FAbA=\", false, function () {\n  return [useTitle, useStyle, useParams, useSelector, useDispatch];\n});\n\n_c2 = GrammarPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"GrammarPage\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Tabs","Tab","Typography","Box","useTitle","VideoCard","FormGroup","FormControlLabel","Checkbox","Container","Button","useDispatch","useSelector","getGrammar","useParams","makeStyles","cloudinaryImgOptimize","DEFAULTS","incorrectIcon","correctIcon","useStyle","borderTopic","borderStyle","borderColor","borderWidth","backgroundColor","width","height","grammarbox","padding","border","color","marginBottom","picture","marginLeft","tabcontents","borderRadius","TabPanel","props","children","value","index","other","p","propTypes","node","number","isRequired","a11yProps","id","GrammarPage","classes","setValue","checkAnswer","setCheckAnswer","showAnswer","setShowAnswer","isPlaying","setIsPlaying","grammarId","grammar","questions","state","grammarReducer","dispatch","answers","setAnswers","getText","text","Text","split","imgSrc","Image","IMAGE_SRC","handleChange","_event","newValue","isCorrect","setisCorrect","handleClickShowAnswer","handleClickReset","window","confirm","location","reload","handleCheck","i","includes","j","length","splice","push","ar","handleClickCheckAnswer","numberCorrect","Answers","console","log","k","close","Title","Content","Video","Audio","borderBottom","__html","Script","Items","map","item","Point","Examples","it","question","content"],"sources":["C:/Users/PC2/Desktop/_blgashLMS/frontend/src/pages/Grammar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport useTitle from \"../hooks/useTitle\";\nimport { VideoCard } from \"material-ui-player\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getGrammar } from \"../redux/actions/grammarAction\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from \"../constants/index\";\nimport incorrectIcon from \"assets/icons/checkAnswer/incorrect.gif\";\nimport correctIcon from \"assets/icons/checkAnswer/correct.gif\";\n\nconst useStyle = makeStyles(() => ({\n  borderTopic: {\n    borderStyle: \"solid\",\n    borderColor: \"initial\",\n    borderWidth: \"1px\",\n    backgroundColor: \"#ccff66\",\n    width: \"700px\",\n    height: \"auto\",\n  },\n  grammarbox: {\n    backgroundColor: \"#99ffff\",\n    padding: \"10px 10px\",\n    border: \"1px solid #666\",\n    color: \"black\",\n\n    marginBottom: \"10px\",\n  },\n  picture: {\n    width: \"50rem\",\n    height: \"30rem\",\n    marginLeft: \"15rem\",\n  },\n  tabcontents: {\n    border: \"1px solid #2eb8b8\",\n    padding: \"10px\",\n    backgroundColor: \"#FFF\",\n    borderRadius: \"0 3px 3px 3px\",\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function GrammarPage() {\n  useTitle(\"Grammar\");\n  const classes = useStyle();\n  const [value, setValue] = useState(0);\n  const [checkAnswer, setCheckAnswer] = useState(false);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(true);\n\n  const grammarId = useParams().id;\n  const { grammar, questions } = useSelector((state) => state.grammarReducer);\n\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(getGrammar(grammarId), [dispatch]));\n\n  const [answers, setAnswers] = useState([]);\n\n  const getText = (text) => {\n    let Text = [];\n    if (text) {\n      Text = text.split(\"\\n\");\n    }\n    return Text;\n  };\n\n  let imgSrc = null;\n  if (grammar) {\n    imgSrc = cloudinaryImgOptimize(\n      grammar.Image ? grammar.Image : DEFAULTS.IMAGE_SRC,\n      200,\n      200,\n      true,\n      true\n    );\n  }\n\n  const handleChange = (_event, newValue) => {\n    setValue(newValue);\n  };\n  const [isCorrect, setisCorrect] = useState([]);\n\n  const handleClickShowAnswer = () => {\n    setShowAnswer(true);\n  };\n\n  const handleClickReset = () => {\n    if (window.confirm(\"Do you want reload page again?\")) {\n      window.location.reload();\n    }\n  };\n\n  const handleCheck = (index, i) => {\n    if (answers[index]) {\n      if (answers[index].includes(i)) {\n        for (var j = 0; j < answers[index].length; j++) {\n          if (answers[index][j] == i) {\n            answers[index].splice(j, 1);\n          }\n        }\n      } else {\n        answers[index].push(i);\n      }\n    } else {\n      let ar = [];\n      answers[index] = ar;\n      answers[index].push(i);\n    }\n  };\n\n  const handleClickCheckAnswer = () => {\n    if (answers.length > 0) {\n      for (var i = 0; i < answers.length; i++) {\n        if (answers[i]) {\n          if (answers[i].length > 0) {\n            let numberCorrect = 0;\n            for (let j = 0; j < questions[i].Answers.length; j++) {\n              if (questions[i].Answers[j].isCorrect === true) {\n                numberCorrect += 1;\n              }\n              console.log(answers[i]);\n            }\n            if (numberCorrect === answers[i].length) {\n              isCorrect[i] = true;\n              for (let k = 0; k < answers[i].length; k++) {\n                if (questions[i].Answers[answers[i][k]].isCorrect == false) {\n                  isCorrect[i] = false;\n                }\n              }\n            } else {\n              isCorrect[i] = false;\n            }\n\n            // if(answers[i].length>1) {isCorrect[i]=false;}\n            // else{\n            //   if(questions[i].Answers[answers[i][0]].isCorrect==true) {isCorrect[i]=true;}\n            //   if(questions[i].Answers[answers[i][0]].isCorrect==false) {isCorrect[i]=false;}\n          } else {\n            if (window.confirm(\"Chọn đáp án cho tất cả câu hỏi.\")) {\n              window.close();\n            }\n          }\n        } else {\n          if (window.confirm(\"Chọn đáp án cho tất cả câu hỏi.\")) {\n            window.close();\n          }\n        }\n      }\n    } else {\n      if (window.confirm(\"Chọn đáp án cho tất cả câu hỏi.\")) {\n        window.close();\n      }\n    }\n    setCheckAnswer(true);\n    setShowAnswer(true);\n  };\n\n  return (\n    <>\n      <Container>\n        <>\n          <Typography variant=\"h6\" align=\"center\">\n            {grammar.Title}\n          </Typography>\n          <Typography>{grammar.Content}</Typography>\n        </>\n\n        {grammar.Video ? (\n          <div>\n            <VideoCard\n              src={isPlaying === true && grammar.Video}\n              onEnded={() => setIsPlaying(false)}\n            ></VideoCard>\n          </div>\n        ) : (\n          <img className={classes.picture} src={imgSrc} alt=\"\" align=\"center\" />\n        )}\n\n        {grammar.Audio && (\n          <audio controls>\n            <source src={grammar.Audio} type=\"audio/mpeg\" />\n            Your browser does not support the audio element.\n          </audio>\n        )}\n\n        <Box sx={{ width: \"100%\" }}>\n          <Box\n            sx={{\n              borderBottom: 1,\n              borderColor: \"divider\",\n              backgroundColor: \"#2eb8b8\",\n              color: \"white\",\n            }}\n          >\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label=\"basic tabs example\"\n              indicatorColor=\"primary\"\n            >\n              <Tab label=\"Script\" {...a11yProps(0)} />\n              <Tab label=\"Grammar\" {...a11yProps(1)} />\n              <Tab label=\"Quiz\" {...a11yProps(2)} />\n            </Tabs>\n          </Box>\n          <div className={classes.tabcontents}>\n            <TabPanel value={value} index={0}>\n              <td dangerouslySetInnerHTML={{ __html: grammar.Script }} />\n            </TabPanel>\n\n            <TabPanel value={value} index={1}>\n              {grammar.Items &&\n                grammar.Items.map((item, index) => (\n                  <>\n                    <Typography className={classes.grammarbox}>\n                      <p>\n                        <strong>Point {index + 1} : </strong>\n                        {item.Point}\n                      </p>\n                    </Typography>\n\n                    <div>\n                      {getText(item.Examples).map((it) => (\n                        <Typography variant=\"body2\" align=\"justify\">\n                          {it}\n                        </Typography>\n                      ))}\n                    </div>\n                  </>\n                ))}\n            </TabPanel>\n\n            <TabPanel value={value} index={2}>\n              <Typography variant=\"h6\">\n                Answer the following questions about the interview.\n              </Typography>\n\n              {questions &&\n                questions.map((question, index) => (\n                  <>\n                    <Typography variant=\"body2\">\n                      {index + 1}) {question.Content}\n                      {checkAnswer && isCorrect[index] == true && (\n                        <span>\n                          <img src={correctIcon} alt=\"Correct!\" />\n                        </span>\n                      )}\n                      {checkAnswer && isCorrect[index] == false && (\n                        <span>\n                          <img src={incorrectIcon} alt=\"Correct!\" />\n                        </span>\n                      )}\n                    </Typography>\n                    <FormGroup>\n                      {question.Answers.map((item, i) =>\n                        showAnswer && item.isCorrect == true ? (\n                          <FormControlLabel\n                            key={i}\n                            control={\n                              <Checkbox\n                                color=\"primary\"\n                                id={`${item}-${i}`}\n                                onClick={() => handleCheck(index, i)}\n                              />\n                            }\n                            label={\n                              <Typography style={{ color: \"#008000\" }}>\n                                <strong>{item.content}</strong>\n                              </Typography>\n                            }\n                          ></FormControlLabel>\n                        ) : (\n                          <FormControlLabel\n                            key={i}\n                            control={\n                              <Checkbox\n                                color=\"primary\"\n                                id={`${item}-${i}`}\n                                onClick={() => handleCheck(index, i)}\n                              />\n                            }\n                            label={item.content}\n                          ></FormControlLabel>\n                        )\n                      )}\n                    </FormGroup>\n                  </>\n                ))}\n\n              <Button color=\"primary\" onClick={() => handleClickCheckAnswer()}>\n                Check Answers\n              </Button>\n              <Button color=\"primary\" onClick={() => handleClickReset()}>\n                Reset Quiz\n              </Button>\n              <Button color=\"primary\" onClick={() => handleClickShowAnswer()}>\n                Show Answers\n              </Button>\n            </TabPanel>\n          </div>\n        </Box>\n      </Container>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}