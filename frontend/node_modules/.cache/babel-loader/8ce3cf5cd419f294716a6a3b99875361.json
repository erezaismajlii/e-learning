{"ast":null,"code":"import axios from \"axios\";\nconst URL = `/api/user`;\nconst userApi = {\n  login: (email, password) => {\n    return axios.post(`${URL}/login`, {\n      email,\n      password\n    });\n  },\n  register: (name, email, password) => {\n    return axios.post(`${URL}/register`, {\n      name,\n      email,\n      password\n    });\n  },\n  activationEmail: activation_token => {\n    return axios.post(`${URL}/activation`, {\n      activation_token\n    });\n  },\n  forgotPassword: email => {\n    return axios.post(`${URL}/forgot-password`, {\n      email\n    });\n  },\n  resetPassword: (password, access_token) => {\n    return axios.post(`${URL}/reset-password`, {\n      password,\n      access_token\n    });\n  },\n  getToken: () => {\n    return axios.get(`${URL}/refresh-token`);\n  },\n  getUserInfo: () => {\n    return axios.get(`${URL}/get-user-info`);\n  },\n  updateAvatar: avatar => {\n    return axios.post(`${URL}/update-avatar`, avatar, {\n      header: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    });\n  },\n  updateProfile: (name, avatar) => {\n    return axios.patch(`${URL}/update-profile`, {\n      name,\n      avatar\n    });\n  },\n  updatePassword: password => {\n    return axios.post(`${URL}/update-password`, {\n      password\n    });\n  },\n  logout: () => {\n    return axios.post(`${URL}/logout`);\n  },\n  getAllUsers: () => {\n    return axios.get(`${URL}/get-all-users`);\n  },\n  getUserDetails: user_id => {\n    return axios.get(`${URL}/get-user-details/${user_id}`);\n  },\n  lockUser: user_id => {\n    return axios.patch(`${URL}/lock-user/${user_id}`);\n  },\n  unlockUser: user_id => {\n    return axios.patch(`${URL}/unlock-user/${user_id}`);\n  },\n  deleteUser: user_id => {\n    return axios.patch(`${URL}/delete-user/${user_id}`);\n  },\n  addUser: user => {\n    return axios.post(`${URL}/add-user`, { ...user\n    }, {\n      header: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    });\n  },\n  editUser: (user_id, user) => {\n    return axios.post(`${URL}/edit-user/${user_id}`, { ...user\n    }, {\n      params: {\n        user_id\n      },\n      header: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    });\n  },\n  putUpdateUserCoin: newCoin => {\n    return axios.put(`${URL}/update-coin`, {\n      newCoin\n    });\n  },\n  getTopCoin: () => {\n    return axios.get(`${URL}/get-top-coin`);\n  }\n};\nexport default userApi;","map":{"version":3,"names":["axios","URL","userApi","login","email","password","post","register","name","activationEmail","activation_token","forgotPassword","resetPassword","access_token","getToken","get","getUserInfo","updateAvatar","avatar","header","updateProfile","patch","updatePassword","logout","getAllUsers","getUserDetails","user_id","lockUser","unlockUser","deleteUser","addUser","user","editUser","params","putUpdateUserCoin","newCoin","put","getTopCoin"],"sources":["C:/Users/PC2/Desktop/_blgashLMS/frontend/src/apis/userApi.js"],"sourcesContent":["import axios from \"axios\";\nconst URL = `/api/user`;\nconst userApi = {\n  login: (email, password) => {\n    return axios.post(`${URL}/login`, { email, password });\n  },\n  register: (name, email, password) => {\n    return axios.post(`${URL}/register`, { name, email, password });\n  },\n  activationEmail: (activation_token) => {\n    return axios.post(`${URL}/activation`, { activation_token });\n  },\n  forgotPassword: (email) => {\n    return axios.post(`${URL}/forgot-password`, { email });\n  },\n  resetPassword: (password, access_token) => {\n    return axios.post(`${URL}/reset-password`, { password, access_token });\n  },\n  getToken: () => {\n    return axios.get(`${URL}/refresh-token`);\n  },\n  getUserInfo: () => {\n    return axios.get(`${URL}/get-user-info`);\n  },\n  updateAvatar: (avatar) => {\n    return axios.post(`${URL}/update-avatar`, avatar, {\n      header: { \"content-type\": \"multipart/form-data\" },\n    });\n  },\n  updateProfile: (name, avatar) => {\n    return axios.patch(`${URL}/update-profile`, { name, avatar });\n  },\n  updatePassword: (password) => {\n    return axios.post(`${URL}/update-password`, { password });\n  },\n  logout: () => {\n    return axios.post(`${URL}/logout`);\n  },\n  getAllUsers: () => {\n    return axios.get(`${URL}/get-all-users`);\n  },\n  getUserDetails: (user_id) => {\n    return axios.get(`${URL}/get-user-details/${user_id}`);\n  },\n  lockUser: (user_id) => {\n    return axios.patch(`${URL}/lock-user/${user_id}`);\n  },\n  unlockUser: (user_id) => {\n    return axios.patch(`${URL}/unlock-user/${user_id}`);\n  },\n  deleteUser: (user_id) => {\n    return axios.patch(`${URL}/delete-user/${user_id}`);\n  },\n  addUser: (user) => {\n    return axios.post(\n      `${URL}/add-user`,\n      { ...user },\n      {\n        header: { \"content-type\": \"multipart/form-data\" },\n      }\n    );\n  },\n  editUser: (user_id, user) => {\n    return axios.post(\n      `${URL}/edit-user/${user_id}`,\n      { ...user },\n      {\n        params: { user_id },\n        header: { \"content-type\": \"multipart/form-data\" },\n      }\n    );\n  },\n  putUpdateUserCoin: (newCoin) => {\n    return axios.put(`${URL}/update-coin`, { newCoin });\n  },\n\n  getTopCoin: () => {\n    return axios.get(`${URL}/get-top-coin`);\n  },\n\n};\n\nexport default userApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}